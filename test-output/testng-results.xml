<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[onStart]]>
    </line>
    <line>
      <![CDATA[createContact]]>
    </line>
    <line>
      <![CDATA[onTestSuccess]]>
    </line>
    <line>
      <![CDATA[createOrganizationWithIndustry]]>
    </line>
    <line>
      <![CDATA[onTestSuccess]]>
    </line>
    <line>
      <![CDATA[createOrganization]]>
    </line>
  </reporter-output>
  <suite started-at="2024-07-31T16:05:42 IST" name="Suite" finished-at="2024-07-31T16:06:20 IST" duration-ms="38301">
    <groups>
    </groups>
    <test started-at="2024-07-31T16:05:42 IST" name="Test" finished-at="2024-07-31T16:06:20 IST" duration-ms="38301">
      <class name="Task.ContactsWithData">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:Task.ContactsWithData@62379589]" started-at="2024-07-31T16:05:42 IST" name="preCondition" finished-at="2024-07-31T16:05:44 IST" duration-ms="2249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method is-config="true" signature="login()[pri:0, instance:Task.ContactsWithData@62379589]" started-at="2024-07-31T16:05:44 IST" name="login" finished-at="2024-07-31T16:05:46 IST" duration-ms="1852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createContact()[pri:0, instance:Task.ContactsWithData@62379589]" started-at="2024-07-31T16:05:46 IST" name="createContact" finished-at="2024-07-31T16:05:53 IST" duration-ms="7556" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[createContact]]>
            </line>
            <line>
              <![CDATA[onTestSuccess]]>
            </line>
          </reporter-output>
        </test-method> <!-- createContact -->
        <test-method is-config="true" signature="logout()[pri:0, instance:Task.ContactsWithData@62379589]" started-at="2024-07-31T16:05:53 IST" name="logout" finished-at="2024-07-31T16:05:54 IST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:Task.ContactsWithData@62379589]" started-at="2024-07-31T16:05:54 IST" name="postCondition" finished-at="2024-07-31T16:05:55 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- Task.ContactsWithData -->
      <class name="Task.OrganizationWithIndustry">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:Task.OrganizationWithIndustry@557caf28]" started-at="2024-07-31T16:05:55 IST" name="preCondition" finished-at="2024-07-31T16:05:56 IST" duration-ms="1691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method is-config="true" signature="login()[pri:0, instance:Task.OrganizationWithIndustry@557caf28]" started-at="2024-07-31T16:05:56 IST" name="login" finished-at="2024-07-31T16:05:58 IST" duration-ms="1737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createOrganizationWithIndustry()[pri:0, instance:Task.OrganizationWithIndustry@557caf28]" started-at="2024-07-31T16:05:58 IST" name="createOrganizationWithIndustry" finished-at="2024-07-31T16:06:07 IST" duration-ms="8585" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[createOrganizationWithIndustry]]>
            </line>
            <line>
              <![CDATA[onTestSuccess]]>
            </line>
          </reporter-output>
        </test-method> <!-- createOrganizationWithIndustry -->
        <test-method is-config="true" signature="logout()[pri:0, instance:Task.OrganizationWithIndustry@557caf28]" started-at="2024-07-31T16:06:07 IST" name="logout" finished-at="2024-07-31T16:06:08 IST" duration-ms="958" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:Task.OrganizationWithIndustry@557caf28]" started-at="2024-07-31T16:06:08 IST" name="postCondition" finished-at="2024-07-31T16:06:08 IST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- Task.OrganizationWithIndustry -->
      <class name="Task.Organazation">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:Task.Organazation@408d971b]" started-at="2024-07-31T16:06:08 IST" name="preCondition" finished-at="2024-07-31T16:06:09 IST" duration-ms="1694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method is-config="true" signature="login()[pri:0, instance:Task.Organazation@408d971b]" started-at="2024-07-31T16:06:09 IST" name="login" finished-at="2024-07-31T16:06:11 IST" duration-ms="1858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createOrganization()[pri:0, instance:Task.Organazation@408d971b]" started-at="2024-07-31T16:06:11 IST" name="createOrganization" finished-at="2024-07-31T16:06:19 IST" duration-ms="7289" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Task.Organazation.createOrganization(Organazation.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[createOrganization]]>
            </line>
          </reporter-output>
        </test-method> <!-- createOrganization -->
        <test-method is-config="true" signature="logout()[pri:0, instance:Task.Organazation@408d971b]" started-at="2024-07-31T16:06:19 IST" name="logout" finished-at="2024-07-31T16:06:20 IST" duration-ms="932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:Task.Organazation@408d971b]" started-at="2024-07-31T16:06:20 IST" name="postCondition" finished-at="2024-07-31T16:06:20 IST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- Task.Organazation -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
